// üìê –ü–∞—Ä–∞–º–µ—Ç—Ä–∏
sphere_radius = 10;
bolt_diameter = 6;
hex_width = 10;
hex_depth = 3;
clearance = 0.3;

outer_diameter = 10;        
inner_diameter = 8;         
cylinder_height = 40;
solid_cap_height = 5;       
cylinder_z_offset = -50
;     // üîÑ –∑–º—ñ—â–µ–Ω–Ω—è —Ü–∏–ª—ñ–Ω–¥—Ä–∞ –ø–æ –æ—Å—ñ Z

// ‚öôÔ∏è –ú–æ–¥—É–ª—å —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≥–ª–∏–±–ª–µ–Ω–Ω—è
module hex_hole(width, depth) {
    rotate([0,0,30])
        linear_extrude(height = depth + 1)
            polygon(points=[
                for(i=[0:5])
                    [width/2 * cos(60*i), width/2 * sin(60*i)]
            ]);
}

// üß± –û—Å–Ω–æ–≤–Ω–∞ –¥–µ—Ç–∞–ª—å
difference() {
    union() {
        // üîò –ü—ñ–≤—Å—Ñ–µ—Ä–∞
        rotate([90, 0, 0])
            intersection() {
                sphere(r = sphere_radius, $fn = 64);
                translate([-sphere_radius, -sphere_radius, 0])
                    cube([2*sphere_radius, 2*sphere_radius, sphere_radius], center=false);
            }

        // üî© –¢—Ä—É–±—á–∞—Å—Ç–∏–π —Ü–∏–ª—ñ–Ω–¥—Ä –∑ —Å—É—Ü—ñ–ª—å–Ω–∏–º –≤–µ—Ä—Ö–æ–º
        translate([0, 0, cylinder_z_offset])
            difference() {
                cylinder(h = cylinder_height, d = outer_diameter, $fn = 64);

                translate([0, 0, 0])
                    cylinder(h = cylinder_height - solid_cap_height, d = inner_diameter, $fn = 64);
            }
    }

    // üï≥ –û—Ç–≤—ñ—Ä –ø—ñ–¥ –±–æ–ª—Ç
    rotate([90, 0, 0])
        translate([0, 0, -1])
            cylinder(h = 2*sphere_radius, d = bolt_diameter + clearance, $fn = 64);

    // üî∑ –®–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω–µ –∑–∞–≥–ª–∏–±–ª–µ–Ω–Ω—è
    rotate([90, 0, 0])
        translate([0, 0, sphere_radius - hex_depth])
            hex_hole(hex_width + clearance, hex_depth);
}
